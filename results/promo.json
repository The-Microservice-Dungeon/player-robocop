{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Java 15",
  "type": "Class can be a record",
  "tags": [
    "JAVA"
  ],
  "severity": "Moderate",
  "comment": "Class can be a record",
  "detailsInfo": "Suggests replacing classes with records.\n\nThe inspection can be useful if you need to focus on modeling immutable data rather than extensible behavior.\nAutomatic implementation of data-driven methods, such as equals and accessors, helps to get rid of boilerplate.\n\n\nNote that not every class can be a record. Here are some of the restrictions:\n\n* A class must contain no inheritors and must be a top-level class.\n* All the non-static fields in class must be final.\n* Class must contain no instance initializers, generic constructors, nor native methods.\n\nTo get a full list of the restrictions, refer to the\n[Oracle documentation](https://docs.oracle.com/javase/specs/jls/se15/preview/specs/records-jls.html).\n\nExample:\n\n\n      class Point {\n        private final double x;\n        private final double y;\n\n        Point(double x, double y) {\n          this.x = x;\n          this.y = y;\n        }\n\n        double getX() {\n          return x;\n        }\n\n        double getY() {\n          return y;\n        }\n      }\n\nThis record will be converted to:\n\n\n      record Point(int x, int y) {\n      }\n\nThis inspection only reports if the language level of the project or module is 15 preview or higher.\n\nNew in 2020.3",
  "sources": [
    {
      "type": "class",
      "path": "backend/src/main/java/thkoeln/dungeon/robot/domain/RobotService.java",
      "language": "JAVA",
      "line": 9,
      "offset": 13,
      "length": 12,
      "code": {
        "startLine": 7,
        "length": 12,
        "offset": 23,
        "surroundingCode": "\n@Service\npublic class RobotService {\n    private final RobotRepository robotRepository;\n    @Autowired"
      }
    }
  ],
  "attributes": {
    "module": "backend",
    "inspectionName": "ClassCanBeRecord"
  },
  "hash": "-614863976423519180"
}]}